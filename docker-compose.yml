services:
  keycloak:
    image: quay.io/keycloak/keycloak:25.0
    container_name: keycloak
    command:
      - start-dev
      - --hostname-strict=false
      - --import-realm
      - --file=/opt/keycloak/data/import/app-demo-realm.json
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: "true"
      TZ: "America/Sao_Paulo"
    ports:
      - "8080:8080"    # UI/Admin (externo 8080 -> interno 8080)
      - "9000:9000"    # Management (health/metrics)
    volumes:
      - ./app-demo-realm.json:/opt/keycloak/data/import/app-demo-realm.json:ro
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000 && printf 'GET /health/ready HTTP/1.1\r\nHost: localhost\r\n\r\n' >&3 && head -n1 <&3 | grep -q '200'"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 60s
    restart: unless-stopped

  app-resource:
    image: app-resource:1.0.0
    container_name: app-resource
    environment:
      SERVER_PORT: 8082
      KEYCLOAK_ISSUER_URI: http://keycloak:8080/realms/app-pks-realm
      SPRING_PROFILES_ACTIVE: docker   # ativa o profile "docker"
    ports:
      - "8082:8082"
    depends_on:
      keycloak:
        condition: service_healthy
    restart: unless-stopped

  app-client:
    image: app-client:1.0.0
    container_name: app-client
    environment:
      SERVER_PORT: 8081
      KEYCLOAK_ISSUER_URI: http://keycloak:8080/realms/app-pks-realm
      SPRING_PROFILES_ACTIVE: docker   # ativa o profile "docker"
    ports:
      - "8081:8081"   # expÃµe o cliente em http://localhost:8081
    depends_on:
      keycloak:
        condition: service_healthy
    restart: unless-stopped
